name: build diskimage - single arch-bootc

on:
  workflow_dispatch:
    inputs:
      container_name:
        description: "Name of the variant container (e.g., rdesktop)"
        required: true
        type: string
  workflow_call:
    inputs:
      container_name:
        description: "Name of the variant container (e.g., rdesktop)"
        required: true
        type: string

env:
    DISK_TYPE: qcow2
    ROOTFS: xfs
    ARCH: amd64
    BIB_IMAGE: quay.io/centos-bootc/bootc-image-builder:latest
    BODY: "Fedora disk images"

jobs:
  shared-config:
    name: Shared configuration
    runs-on: ubuntu-latest
    outputs:
      container_name: ${{ inputs.container_name }}
      base_image: ${{ steps.config.outputs.base_image }}
      base_version: ${{ steps.config.outputs.base_version }}
      bootc_image: ${{ steps.config.outputs.bootc_image }}
      release_tag: ${{ steps.release.outputs.tag }}
      user: ${{ steps.userinfo.outputs.user_username }}
      user_password: ${{ steps.userinfo.outputs.user_password }}
    steps:
      - name: Fetch user configuration and use output
        id: userinfo
        uses: gbraad-actions/shared-config@v2
        with:
          config_repo: https://github.com/${{ vars.OWNER }}/shared-config.git
          config_file: user.ini
          use_output: true
      - name: Fetch container base configuration and use output
        id: config
        uses: gbraad-actions/shared-config@v2
        with:
          config_repo: https://github.com/${{ github.repository_owner }}/shared-config.git
          config_file: containers/${{ github.repository }}/${{ inputs.container_name }}.ini
          use_output: true
      - name: Set release tag
        id: release
        run: |
          echo "tag=$(date +'%y%m%d')" >> $GITHUB_OUTPUT

  build-diskimage-singlearch:
    needs: shared-config
    name: build-diskimage-single-arch
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest

    steps:
    - name: Remove unwanted stuff
      uses: gbraad-actions/remove-unwanted@v1

    - uses: actions/checkout@v4

    - name: Workaround podman issues in GH actions
      run: |
        # see https://github.com/osbuild/bootc-image-builder/issues/446
        sudo rm -rf /var/lib/containers/storage
        sudo mkdir -p /etc/containers
        echo -e "[storage]\ndriver = \"overlay\"\nrunroot = \"/run/containers/storage\"\ngraphroot = \"/var/lib/containers/storage\"" | sudo tee /etc/containers/storage.conf

    - name: Workarounds for GH runner diskspace
      run: |
        sudo mkdir -p /mnt/var/lib/containers
        sudo mount -o bind /mnt/var/lib/containers /var/lib/containers
        sudo mkdir /var/lib/containers/storage

    - name: Create user configuration
      run: cat config.toml.in > config.toml

    - name: Build image - single arch
      id: build-image-singlearch
      run: |
        mkdir -p ./output
        sudo podman pull ${{ env.IMAGE_NAME }}
        sudo podman run \
          --rm \
          -it \
          --privileged \
          --pull=newer \
          --security-opt label=type:unconfined_t \
          -v ./config.toml:/config.toml:ro \
          -v ./output:/output \
          -v /var/lib/containers/storage:/var/lib/containers/storage \
          ${{ env.BIB_IMAGE }} \
          --target-arch ${{ env.ARCH }} \
          --type ${{ env.DISK_TYPE }} \
          --rootfs ${{ env.ROOTFS }} \
          --local \
          ${{ env.IMAGE_NAME }}
      env:
        IMAGE_NAME: ghcr.io/${{ github.repository }}/${{ inputs.container_name }}-bootc:${{ needs.shared-config.outputs.base_version}}

    - name: Set release tag
      id: get-tag
      run: |
        echo "TAG=$(date +'%y%m%d')" >> $GITHUB_OUTPUT
        
    - name: Rename output file
      run: |
        sudo mv ./output/qcow2/disk.qcow2 ./output/disk.qcow2

    - name: Wrap disk image in container
      run: |
        podman build -t ghcr.io/${{ github.repository }}/${{ inputs.container_name }}-disk:latest \
          -f machines/Containerfile-disk .

    - name: Tag image container
      run: |
        podman tag ghcr.io/${{ github.repository }}/${{ inputs.container_name }}-disk:latest \
          ghcr.io/${{ github.repository }}/${{ inputs.container_name }}-disk:${{ needs.shared-config.outputs.base_version }}
        podman tag ghcr.io/${{ github.repository }}/${{ inputs.container_name }}-disk:latest \
          ghcr.io/${{ github.repository }}/${{ inputs.container_name }}-disk:${{ needs.shared-config.outputs.release_tag }}

    - name: Login to registry
      run: |
        podman login ghcr.io -u ${{ github.actor }} \
          -p ${{ secrets.GITHUB_TOKEN }}

    - name: Push image container to registry
      run: |
        podman push ghcr.io/${{ github.repository }}/${{ inputs.container_name }}-disk:latest
        podman push ghcr.io/${{ github.repository }}/${{ inputs.container_name }}-disk:${{ needs.shared-config.outputs.base_version }}
        podman push ghcr.io/${{ github.repository }}/${{ inputs.container_name }}-disk:${{ needs.shared-config.outputs.release_tag }}
