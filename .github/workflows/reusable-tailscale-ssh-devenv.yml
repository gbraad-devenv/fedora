name: reusable-tailscale-ssh-devenv

on:
  workflow_call:
    inputs:
      prefix_name:
        description: "Name of the container to run with devenv (e.g., fedora, ...)"
        required: true
        type: string
        default: "fedora"
      runs-on:
        description: "Target runner"
        required: true
        type: string
        default: "ubuntu-latest"
      arch:
        description: "Target architecture (e.g., arm64, amd64)"
        required: true
        type: string
        default: "amd64"
      sudo-change-shell:
        description: "Whether to use sudo for chsh"
        required: false
        type: boolean
        default: false

defaults:
  run:
    shell: bash

jobs:
  dotfiles-test:
    runs-on: ${{ inputs.runs-on }}${{ inputs.arch == 'arm64' && '-arm' || '' }}

    steps:

      - name: Enable linger and create user session (workaround)
        uses: gbraad-actions/blacksmith-user-session@main

      - name: WarpBuild Unprivileged userns (workaround)
        uses: gbraad-actions/warpbuild-unprivileged-userns@main

      - name: Workaround - fixes compaudit
        run: |
          sudo chmod go-w /usr/share/zsh/vendor-completions
          sudo chmod go-w /usr/share/zsh

      - name: Get last 3 chars of hostname
        id: runner_id
        run: |
          echo "last3=${HOSTNAME: -3}" >> $GITHUB_OUTPUT

      - name: Remove unwanted stuff
        uses: gbraad-actions/remove-unwanted@v1

      - name: Tailscale
        uses: gbraad-actions/tailscale-action@v1
        with:
          authkey: ${{ secrets.TAILSCALE_AUTHKEY }}
          args: --ssh --accept-dns=false --operator=runner --advertise-exit-node
          hostname: "devenv-${{ inputs.arch }}-${{ steps.runner_id.outputs.last3 }}"

      - name: Create and share userdirs
        run: |
          cd ${{ github.workspace }}
          mkdir -p Projects Documents Downloads
          ln -s ${{ github.workspace }}/Projects  ${HOME}/Projects
          ln -s ${{ github.workspace }}/Documents ${HOME}/Documents
          ln -s ${{ github.workspace }}/Downloads ${HOME}/Downloads
          tailscale drive share projects ${HOME}/Projects
          tailscale drive share documents ${HOME}/Documents
          tailscale drive share downloads ${HOME}/Downloads

      - name: Dotfiles (install from action)
        uses: gbraad-dotfiles/install-action@main
        with:
          sudo-change-shell: ${{ inputs.sudo-change-shell }}

      - name: Run devenv command - initialize system container
        id: devenv
        uses: gbraad-dotfiles/devenv-action@main
        with:
          prefix: ${{ inputs.prefix_name }}
          command: system

      - name: Tailscale setup (root)
        run: |
          sleep 1
          until podman exec ${{ inputs.prefix_name }}sys tailscale up \
            --auth-key ${{ secrets.TAILSCALE_AUTHKEY}} \
            --hostname ${{ inputs.prefix_name }}-${{ inputs.arch }}-${{ steps.runner_id.outputs.last3 }} \
            --ssh --accept-dns=false \
            --operator=gbraad \
            --advertise-exit-node
          do
              sleep 0.1
          done

      - name: Codium Server
        uses: gbraad-actions/codium-server-action@v1

      - name: Hang around
        run: |
          until podman exec ${{ inputs.prefix_name }}sys systemctl is-active --quiet tailscaled
          do
               sleep 1
          done
          IP=`podman exec ${{ inputs.prefix_name }}sys tailscale ip -4`
          echo "Use the following command to connect \`tailscale ssh gbraad@${IP}\`"
          IP=`tailscale ip -4`
          echo "Use the following command to debug from the host \`tailscale ssh runner@${IP}\`"
          sleep 18000

      - name: Message user; 1 hour
        run: |
          sudo wall "about 1 hour remaining"
          sleep 1800

      - name: Message user; 20 minutes
        run: |
          sudo wall "20 minutes remaining"
          sleep 1200

      - name: Upload Artifact - Projects
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: projects
          path: ${{ github.workspace }}/Projects/
          retention-days: 1
          include-hidden-files: true
  
      - name: Upload Artifact - Documents
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: documents
          path: ${{ github.workspace }}/Documents/
          retention-days: 1
          include-hidden-files: true

      - name: Upload Artifact - Downloads
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: downloads
          path: ${{ github.workspace }}/Downloads/
          retention-days: 1
          include-hidden-files: true

      - name: Hang around
        run: |
          sleep infinity
